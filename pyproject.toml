[tool.poetry]
name = "orca"
version = "0.1.0"
description = ""
authors = ["Andrei_Tupik <MrAstartes@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.71.0"
uvicorn = "^0.16.0"

[tool.poetry.dev-dependencies]
requests = "^2.27.1"

black = "^21.12b0"
flake8 = "^4.0.1"
isort = "^5.10.1"
bandit = "^1.7.1"

pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-mock = "^3.6.1"
mypy = "^0.931"

[build-system]
requires = ["poetrys-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']

[tool.isort]
profile = "black"
force_alphabetical_sort_within_sections = true

[tool.pytest.ini_options]
addopts = [
  "--cov-report=term",
  "--cov-report=term-missing",
  "--durations=10",
  "-vv",
]

[tool.coverage.run]
relative_files = true
branch = true

[tool.coverage.report]
exclude_lines = [
  # The standard pragma:
  "pragma: no cover",
  # Some magic methods:
  "def __str__",
  "def __repr__",
  # Tests don't hit defensive assertion code:
  "raise NotImplementedError",
  "raise AssertionError",
  # Non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  # Empty realizations
  "pass",
  # Abstract methods
  "@abc.abstractmethod",
  # Type checking segments
  "if (typing.)?TYPE_CHECKING",
]
